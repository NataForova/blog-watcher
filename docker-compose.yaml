version: '3.8'
services:
    blog-watcher:
      image: blog-watcher
      ports:
        - "8081:8081"
      depends_on:
        - mongo
      env_file:
        - .env

    mongo:
      image: mongo:latest
      restart: always
      ports:
        - "27017:27017"
      environment:
        MONGO_INITDB_DATABASE: blog-watcher

    blog:
      image: blog
      ports:
        - "8080:8080"
      depends_on:
        - db
      env_file:
        - .env

    db:
      image: postgres:latest
      restart: always
      environment:
        POSTGRES_DB: blog
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
      volumes:
        - pgdata:/var/lib/postgresql/data

    zookeeper:
      image: wurstmeister/zookeeper:latest
      platform: linux/amd64
      ports:
        - "2181:2181"

    kafka:
      image: wurstmeister/kafka
      container_name: kafka
      restart: unless-stopped
      ports:
        - '9092:9092'
      expose:
        - 9092
      environment:
        KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29092
        KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      depends_on:
        - zookeeper
      volumes:
          - /var/run/docker.sock:/var/run/docker.sock

volumes:
  pgdata: